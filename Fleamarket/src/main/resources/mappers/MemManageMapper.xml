<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="MemManageMapper">
	<cache />
	
	<!-- 회원 로그인  -->
	<select id="loginMember" parameterType="MemManageDTO" resultType="MemManageDTO">
		select * from member where member_email=#{member_email} and member_pw=#{member_pw}
	</select>
	
	<!-- 가입 -->
	<insert id="registerMember" parameterType="MemManageDTO">
		<![CDATA[
		insert into member(member_no, member_email, member_pw, member_name, member_phone, member_address, member_address2, member_admin)
		values( (select max(member_no)from member)+1, #{member_email}, 
		#{member_pw},#{member_name}, #{member_phone},#{member_address},#{member_address2}, 0 )
		]]>
	</insert>
	
	<!-- 상점 생성 -->
	<insert id="registerStore" parameterType="StoreDTO">
		insert into store(store_no, store_name, store_viewcount, store_open_date, member_no)
		values(
	    (select max(store_no) from store)+1,
	    (SELECT DBMS_RANDOM.STRING('A', 7) FROM DUAL),
	     0, sysdate, (select max(store_no) from store)+1)
	    
<!-- 	    (select member_email from member where member_no=(select max(store_no) from store)+1), -->
	   
	</insert>
	
	<!-- 상점 중복 확인  -->
	<select id="listStore"  resultType="StoreDTO">
		select * from store
	</select>
	
	<!-- 중복된 상점명 변경  -->
	<update id="updateStore" parameterType="StoreDTO">
		update store set
			store_name = (SELECT DBMS_RANDOM.STRING('A', 7) FROM DUAL) where store_name =#{store_name}	
	</update>
	
	<!-- 이메일 중복체크 -->
	<select id="emailCheck" parameterType="String" resultType="Integer">
   		<![CDATA[
   			select count(*)
   				from member
   				where member_email = #{member_email}
   		]]>
	</select>
	
	<!-- 상세보기 -->
	<select id="detailMember" parameterType="String" resultType="MemManageDTO">
		select * from member where member_email = #{member_email}
	</select>

	<!-- 회원정보수정 -->
	<update id="updateMember" parameterType="MemManageDTO">
	  update member set
		member_email=#{member_email}, member_pw=#{member_pw}, member_name=#{member_name}, member_phone=#{member_phone},
		member_address=#{member_address}, member_address2=#{member_address2} where member_email =#{member_email}
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMember" parameterType="MemManageDTO">
		delete from member where
		member_email = #{member_email}
	</delete>
	
	<!-- 관리자 로그인  -->
	<select id="loginAdmin" parameterType="MemManageDTO" resultType="MemManageDTO">
		select * from member 
			where member_email=#{member_email} and 
			member_pw=#{member_pw} and 
			member_admin = 1
	</select>
	
</mapper>
