<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 뷰 리졸버 설정 tiles 와 기본 뷰 설정 -->
	
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"></beans:property>
	</beans:bean>
	
	<!-- Tiles -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles/tilemain.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>        
    <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" />
    </beans:bean>
	
	<!--END 뷰 리졸버 설정 tiles 와 기본 뷰 설정 -->
	
	
	
	<context:component-scan base-package="com.sp.fleamarket" />
	<context:component-scan base-package="com.sp.board.controller"></context:component-scan>
	<context:component-scan base-package="com.sp.mainDetail.controller"></context:component-scan>
	<context:component-scan base-package="com.sp.memManage.controller"></context:component-scan>
	<context:component-scan base-package="com.sp.payment.controller"></context:component-scan>
	<context:component-scan base-package="com.sp.product.controller"></context:component-scan>
	<context:component-scan base-package="com.sp.safepay.controller"></context:component-scan>
	
	<!-- 파일 업로드 관련 설정 -->
		<!--multipartResolver는 MVC 와 관련되 있는 거라서 서블릿컨텍스트에 있어야함 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>

	<!-- uploadPath 로 어노테이션 이용해서 경로 가져오기 위해 아래 처럼 설정 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg
			value="C:/Users/Du/git/Fleamarket_spring/Fleamarket/src/main/webapp/resources/product/upload"></beans:constructor-arg>
	</beans:bean>
	<!--END 파일 업로드 관련 설정 -->
	
	
	<!-- 인터셉터 설정 -->
	<beans:bean id="loginInterceptor" class="com.sp.interceptor.LoginInterceptor"></beans:bean>
	<beans:bean id="authInterceptor" class="com.sp.interceptor.AuthInterceptor"></beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/memmanage/loginpost"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		
		<interceptor><!-- 로그인 필요한 페이지 정의해야함 -->
			<mapping path=""/>
			<mapping path=""/>
			<mapping path=""/>
			<beans:ref bean="authInterceptor"/>
		</interceptor>

	</interceptors>
	
	
	
	<!--END 인터셉터 설정 -->
	
</beans:beans>
